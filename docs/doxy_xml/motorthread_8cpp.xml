<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="motorthread_8cpp" kind="file" language="C++">
    <compoundname>motorthread.cpp</compoundname>
    <includes refid="motorthread_8h" local="no">include/motorthread.h</includes>
    <incdepgraph>
      <node id="5">
        <label>epos4_can.h</label>
        <link refid="epos4__can_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>eposthread.h</label>
        <link refid="eposthread_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>footpedal.h</label>
        <link refid="footpedal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>m_defines.h</label>
        <link refid="m__defines_8h"/>
      </node>
      <node id="2">
        <label>include/motorthread.h</label>
        <link refid="motorthread_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/motorthread.cpp</label>
        <link refid="motorthread_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>EposCmdLib_6.5.1.0/include/Definitions.h</label>
      </node>
      <node id="4">
        <label>QElapsedTimer</label>
      </node>
      <node id="3">
        <label>QThread</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>time.h</label>
      </node>
      <node id="8">
        <label>wiringPi.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="motorthread_8h" kindref="compound">include/motorthread.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="classMotorThread_1a1e2baed6d253f9ce6d5ef96c84b06d57" kindref="member">MotorThread::MotorThread</ref>()</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a5a2bfe44c18d0f115b3daeb1566c5a2b" kindref="member">DEBRIDER_STATE_UNINIT</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a658bd13dd63fc88bd8a5b37930c4c877" kindref="member">m_PrevState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a5a2bfe44c18d0f115b3daeb1566c5a2b" kindref="member">DEBRIDER_STATE_UNINIT</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a35395e16697ec0c879be2ab3abb0324c" kindref="member">m_DebriderTargetSpeed</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Debrider<sp/>speed<sp/>at<sp/>maximum<sp/>pedal<sp/>press</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a129ffc33fb4fabf3be7692cbbea73de8" kindref="member">m_DebriderInstantSpeed</ref>=0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Current<sp/>debrider<sp/>speed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a8b8db3a03d21ce4727f9ddbaa4119256" kindref="member">m_Oscillate</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a40ca8f49bea37962dc0be3d78d692033" kindref="member">m_TargetPos</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a04372fe2e0a1d4a2bae9b1a11fa56566" kindref="member">m_CloseBlade</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1af80248a74299ddbfb058ad311570c98f" kindref="member">m_Emergency</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a1ef32265639a9b03d65085982bd9c929" kindref="member">m_LeftButtonClicked</ref><sp/>=<sp/><sp/><sp/><ref refid="classMotorThread_1a241f03bca98232f09d1395795cd6c10c" kindref="member">m_RightButtonClicked</ref><sp/>=<sp/><ref refid="classMotorThread_1ae427c8e8df2112cf83af0b2bac00dbe4" kindref="member">m_RightPedalClicked</ref><sp/>=<sp/><ref refid="classMotorThread_1a0b8c30c3107cfc30f1ee21cc7c8bcf39" kindref="member">m_LeftPedalClicked</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ad7c2d915038fd14ac3bd2a570b58a0d6" kindref="member">m_GuiBtnCloseBlade</ref>=0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1af0488f54dbd47d15c365ff746a2dffbb" kindref="member">m_GuiChangePresetRPM</ref>=0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1af449179ef93260cd7d5af0db967fe849" kindref="member">m_GuiBtnChangeDirection</ref>=0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a65e302d8a9a11ce4eca6bd0782a2cee9" kindref="member">m_GuiEmergencyMode</ref>=0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4ed783ee0947a482269276518b202fcc" kindref="member">m_WatchdogState</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.<ref refid="classEposThread_1a24b2ac43ad67a2715c2e8eb12318a745" kindref="member">SetMotor</ref>(&amp;<ref refid="classMotorThread_1ae990b753b6a68893e8f3c8c64d4200e4" kindref="member">m_Motor</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.<ref refid="classEposThread_1a3d1e85ae8f3d95a826189f62ea02ae01" kindref="member">SetPedal</ref>(&amp;<ref refid="classMotorThread_1a640de212448250a3fc0da6c6751cc09c" kindref="member">m_FootPedal</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(&amp;<ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>,&amp;<ref refid="classEposThread_1abdd18c775c9831cfd108420190e76da5" kindref="member">EposThread::InitializationComplete</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,&amp;<ref refid="classMotorThread_1a2d8e704b48add85c86022e103d1468a0" kindref="member">MotorThread::on_InitComplete</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(&amp;<ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>,&amp;<ref refid="classEposThread_1ae07f935fa8ca208db6423964a6affae5" kindref="member">EposThread::OscillationComplete</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,&amp;<ref refid="classMotorThread_1ad81a92fafe0cd3fbfc3944625b0d9d4c" kindref="member">MotorThread::on_TransToOscComplete</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(&amp;<ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>,&amp;<ref refid="classEposThread_1aa5673ed3bb8cbe64d164c7124bc00758" kindref="member">EposThread::CloseBladeComplete</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,&amp;<ref refid="classMotorThread_1a4937257506cb3cfc9dbf2184bd0d8a52" kindref="member">MotorThread::on_BladeClosed</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(&amp;<ref refid="classMotorThread_1a640de212448250a3fc0da6c6751cc09c" kindref="member">m_FootPedal</ref>,&amp;<ref refid="classFootPedal_1af8a359cf437785ef51285c3d94d79b76" kindref="member">FootPedal::LButtonClicked</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,&amp;<ref refid="classMotorThread_1a0276cc0d95bf28435c9416edb31c4c60" kindref="member">MotorThread::on_FootPedalLButton</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(&amp;<ref refid="classMotorThread_1a640de212448250a3fc0da6c6751cc09c" kindref="member">m_FootPedal</ref>,&amp;<ref refid="classFootPedal_1ab65e412e59d4646c51dcfbd56c678deb" kindref="member">FootPedal::RButtonClicked</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,&amp;<ref refid="classMotorThread_1a429dbd70a7ee33e426e99ee8c4e11332" kindref="member">MotorThread::on_FootPedalRButton</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(&amp;<ref refid="classMotorThread_1a640de212448250a3fc0da6c6751cc09c" kindref="member">m_FootPedal</ref>,&amp;<ref refid="classFootPedal_1aa45cd4386f40436501ae63f76665d08e" kindref="member">FootPedal::LPedalClicked</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,&amp;<ref refid="classMotorThread_1ada54247cc11e73cd36aac5a2d067766a" kindref="member">MotorThread::on_LeftFootPedal</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(&amp;<ref refid="classMotorThread_1a640de212448250a3fc0da6c6751cc09c" kindref="member">m_FootPedal</ref>,&amp;<ref refid="classFootPedal_1a278f7803e8f6634d9c9344ff803ba72a" kindref="member">FootPedal::RPedalClicked</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,&amp;<ref refid="classMotorThread_1a624b6187e6bc8a5e6a40d2dbd097f566" kindref="member">MotorThread::on_RightFootPedal</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMotorThread_1aa84732efa78a1149e07c1c3061c2b672" kindref="member">MotorThread::run</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ade960b57d24a29082a2a675a85fbd5c0" kindref="member">m_WatchdogTimer</ref>.start();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>dir<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/><sp/>Thread<sp/>starts<sp/>when<sp/>GUI<sp/>is<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>thread<sp/>generates<sp/>5<sp/>ms<sp/>watchdog<sp/>pulse<sp/>that<sp/>keeps<sp/>the<sp/>power<sp/>to<sp/>the<sp/>EPOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>Pump<sp/>alive.<sp/>Therefore,<sp/>any<sp/>action<sp/>that<sp/>takes<sp/>longer<sp/>than<sp/>5<sp/>ms<sp/>for<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(EPOS<sp/>initialization,<sp/>Oscillation<sp/>mode)should<sp/>be<sp/>executed<sp/>from<sp/>the<sp/>separate<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>to<sp/>the<sp/>motor<sp/>will<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>If<sp/>the<sp/>state<sp/>is<sp/>in<sp/>bad<sp/>state<sp/>(communication<sp/>error<sp/>or<sp/>emergency)<sp/>(-5,<sp/>-4,<sp/>-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pulse<sp/>the<sp/>watchdog<sp/>and<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>&lt;<sp/><ref refid="m__defines_8h_1a5a2bfe44c18d0f115b3daeb1566c5a2b" kindref="member">DEBRIDER_STATE_UNINIT</ref>)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UNINIT<sp/>=<sp/>-2<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Except<sp/>for<sp/>when<sp/>emergency<sp/>occured<sp/>and<sp/>Emergency<sp/>Window<sp/>needs<sp/>to<sp/>be<sp/>raised</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>&lt;=<sp/><ref refid="m__defines_8h_1a495593a95f3e1b8c7f961ad81752b206" kindref="member">DEBRIDER_STATE_EPOS_ERROR</ref><sp/><sp/>&amp;&amp;<sp/><ref refid="classMotorThread_1a65e302d8a9a11ce4eca6bd0782a2cee9" kindref="member">m_GuiEmergencyMode</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.<ref refid="classEposThread_1a64675fb679d8e9cfc96b1ddc8a49d959" kindref="member">Abort</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a65e302d8a9a11ce4eca6bd0782a2cee9" kindref="member">m_GuiEmergencyMode</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Close<sp/>EPOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ae990b753b6a68893e8f3c8c64d4200e4" kindref="member">m_Motor</ref>.<ref refid="classMaxonMotor_1a422972183dd4967a5fba482234e711e5" kindref="member">CloseAllDevice</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ae990b753b6a68893e8f3c8c64d4200e4" kindref="member">m_Motor</ref>.<ref refid="classMaxonMotor_1a782ba617ad94197a4dc67ab5fd3231ae" kindref="member">DisableAllDevice</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;State<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a658bd13dd63fc88bd8a5b37930c4c877" kindref="member">m_PrevState</ref><sp/>=<sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>If<sp/>the<sp/>state<sp/>is<sp/>in<sp/>normal<sp/>state,<sp/>but<sp/>not<sp/>initialized<sp/>pulse<sp/>watch<sp/>dog<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>until<sp/>both<sp/>communication<sp/>has<sp/>been<sp/>established</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>&lt;<sp/><ref refid="m__defines_8h_1ad7442fb43ecb74af6c981e5b97335c31" kindref="member">DEBRIDER_STATE_INIT</ref>)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>INIT<sp/>=<sp/>0<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a658bd13dd63fc88bd8a5b37930c4c877" kindref="member">m_PrevState</ref><sp/>=<sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>If<sp/>not<sp/>initialized<sp/>start<sp/>initializing<sp/>in<sp/>separate<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>initializing<sp/>thread<sp/>exits<sp/>without<sp/>error,<sp/>slot<sp/>will<sp/>update<sp/>the<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>==<sp/><ref refid="m__defines_8h_1a5a2bfe44c18d0f115b3daeb1566c5a2b" kindref="member">DEBRIDER_STATE_UNINIT</ref>)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UNINIT<sp/>=<sp/>-2<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a75d10b463a17a52541469e3c1a083374" kindref="member">DEBRIDER_STATE_INITIALIZING</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>INITAILIZING<sp/>=<sp/>-1<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Initializing<sp/>Connections\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classMotorThread_1a640de212448250a3fc0da6c6751cc09c" kindref="member">m_FootPedal</ref>.isRunning())<sp/><sp/><ref refid="classMotorThread_1a640de212448250a3fc0da6c6751cc09c" kindref="member">m_FootPedal</ref>.start();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.isRunning())<sp/><ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.start();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.<ref refid="classEposThread_1a78a50cc02087845e3f167563ee7aee11" kindref="member">SetTransition</ref>(<ref refid="m__defines_8h_1a7780e8c3e872d84d1262aa6907097802a129c5fd2c640e351170c8ede47250479" kindref="member">kInit</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Code<sp/>beyond<sp/>here<sp/>is<sp/>executed<sp/>only<sp/>if<sp/>the<sp/>state<sp/>is<sp/>equal<sp/>or<sp/>greater<sp/>than<sp/>DEBRIDER_STATE_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>if<sp/>no<sp/>emrgency<sp/>and<sp/>communication<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>Read<sp/>relay<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(digitalRead(<ref refid="m__defines_8h_1a7c92a1dbab1c8fa9edd8ade9b86e7e8c" kindref="member">EMERGENCY_RELAY_CONTROL</ref>)==LOW)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Relay<sp/>disconnected<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>###EMERGENCY_MODE<sp/>ACTIONS###</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1af80248a74299ddbfb058ad311570c98f" kindref="member">m_Emergency</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a8f20f6ee38a5bc7f5f041ba44c227ee5" kindref="member">DEBRIDER_STATE_EMERGENCY</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Stop<sp/>Pump<sp/>Motors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmWrite(<ref refid="m__defines_8h_1ac6afe83454259e4960a90aead164bf08" kindref="member">SUCTION_MOTOR_PWM</ref>,0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.<ref refid="classEposThread_1a64675fb679d8e9cfc96b1ddc8a49d959" kindref="member">Abort</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Close<sp/>EPOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ae990b753b6a68893e8f3c8c64d4200e4" kindref="member">m_Motor</ref>.<ref refid="classMaxonMotor_1a422972183dd4967a5fba482234e711e5" kindref="member">CloseAllDevice</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ae990b753b6a68893e8f3c8c64d4200e4" kindref="member">m_Motor</ref>.<ref refid="classMaxonMotor_1a782ba617ad94197a4dc67ab5fd3231ae" kindref="member">DisableAllDevice</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a65e302d8a9a11ce4eca6bd0782a2cee9" kindref="member">m_GuiEmergencyMode</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>Check<sp/>EPOS<sp/>and<sp/>SPI<sp/>communication<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><sp/>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>&gt;=<ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classMotorThread_1a640de212448250a3fc0da6c6751cc09c" kindref="member">m_FootPedal</ref>.<ref refid="classFootPedal_1a6708751eb133b1f752a8f62e3f8fb95d" kindref="member">GetSPIError</ref>()<sp/>||<sp/>!<ref refid="classMotorThread_1a640de212448250a3fc0da6c6751cc09c" kindref="member">m_FootPedal</ref>.isRunning())<sp/><sp/>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>###SPI_ERROR<sp/>ACTIONS###</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>=<ref refid="m__defines_8h_1a8f20f6ee38a5bc7f5f041ba44c227ee5" kindref="member">DEBRIDER_STATE_EMERGENCY</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SPI<sp/>CONNECTION<sp/>ERROR<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>###<sp/>EPOS_ERROR<sp/>ACTIONS<sp/>###</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>&gt;=<sp/><ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>&lt;=<sp/><ref refid="m__defines_8h_1a35592c99e9e69dc06f8ff3283a8af3d8" kindref="member">DEBRIDER_STATE_RUNNING</ref></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="classMotorThread_1ae990b753b6a68893e8f3c8c64d4200e4" kindref="member">m_Motor</ref>.<ref refid="classMaxonMotor_1ae9238a6c6b644d47b9dcd85f3ee9db7d" kindref="member">EPOSGetError</ref>())</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>=<ref refid="m__defines_8h_1a8f20f6ee38a5bc7f5f041ba44c227ee5" kindref="member">DEBRIDER_STATE_EMERGENCY</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EPOS<sp/>CONNECTION<sp/>ERROR<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Process<sp/>pedal<sp/>inputs<sp/>(R/L<sp/>Button<sp/>and<sp/>R<sp/>Pedal)<sp/>that<sp/>were<sp/>updated<sp/>from<sp/>slots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>updates<sp/>GUI<sp/>which<sp/>in<sp/>turn<sp/>change<sp/>motion<sp/>paramteters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a5569480ac5dd2a05c28a8b0008671d47" kindref="member">ProcessPedalButtons</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Read<sp/>and<sp/>process<sp/>left<sp/>pedal<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a27f740f4057d1b9a2128c0e77afb6203" kindref="member">m_LeftPedalDepth</ref><sp/>=<sp/><ref refid="classMotorThread_1a640de212448250a3fc0da6c6751cc09c" kindref="member">m_FootPedal</ref>.<ref refid="classFootPedal_1a44fd654f4b0f63aa7b5e9ac980b75196" kindref="member">GetLeftPedalValue</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Based<sp/>on<sp/>left<sp/>and<sp/>right<sp/>pedal<sp/>inputs,<sp/>system<sp/>will<sp/>be<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>different<sp/>operating<sp/>state<sp/>(close<sp/>blade<sp/>or<sp/>spinning<sp/>blade)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a27f740f4057d1b9a2128c0e77afb6203" kindref="member">m_LeftPedalDepth</ref><sp/>&lt;<sp/><ref refid="m__defines_8h_1ae8994a9ee666db02fa316518c58e99fc" kindref="member">ADC_VALUE_THRESHOLD</ref><sp/>&amp;&amp;<sp/><ref refid="classMotorThread_1a35395e16697ec0c879be2ab3abb0324c" kindref="member">m_DebriderTargetSpeed</ref>){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1adaee421e7f5ab68724f49fb4ba8a833f" kindref="member">m_LeftPedalDown</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1adaee421e7f5ab68724f49fb4ba8a833f" kindref="member">m_LeftPedalDown</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1ad7c2d915038fd14ac3bd2a570b58a0d6" kindref="member">m_GuiBtnCloseBlade</ref>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ad7c2d915038fd14ac3bd2a570b58a0d6" kindref="member">m_GuiBtnCloseBlade</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classMotorThread_1adaee421e7f5ab68724f49fb4ba8a833f" kindref="member">m_LeftPedalDown</ref>)<sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="classMotorThread_1a04372fe2e0a1d4a2bae9b1a11fa56566" kindref="member">m_CloseBlade</ref><sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="classMotorThread_1a04372fe2e0a1d4a2bae9b1a11fa56566" kindref="member">m_CloseBlade</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Left<sp/>Pedal<sp/>Pressed,<sp/>state<sp/>transition<sp/>from<sp/>ENABLED<sp/>to<sp/>RUNNING<sp/>or<sp/>OSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a658bd13dd63fc88bd8a5b37930c4c877" kindref="member">m_PrevState</ref><sp/>==<sp/><ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref><sp/>&amp;&amp;<sp/><ref refid="classMotorThread_1adaee421e7f5ab68724f49fb4ba8a833f" kindref="member">m_LeftPedalDown</ref><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout&lt;&lt;&quot;State<sp/>transition<sp/>from<sp/>enabled<sp/>to<sp/>run/osc\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a8b8db3a03d21ce4727f9ddbaa4119256" kindref="member">m_Oscillate</ref>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a910492cfd9d0edd5cb11482c6b723657" kindref="member">DEBRIDER_STATE_OSC</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.<ref refid="classEposThread_1a78a50cc02087845e3f167563ee7aee11" kindref="member">SetTransition</ref>(<ref refid="m__defines_8h_1a7780e8c3e872d84d1262aa6907097802a3d8ecdec7b8e9218f91d3bef96598199" kindref="member">kRunOscillation</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.<ref refid="classEposThread_1a5c34779ab0c42cd93c714e9699f1d8e6" kindref="member">SetOscillationVelocity</ref>(<ref refid="classMotorThread_1a35395e16697ec0c879be2ab3abb0324c" kindref="member">m_DebriderTargetSpeed</ref>*<ref refid="m__defines_8h_1a1b5f0a2cda8866a2a87331026ac8bd9a" kindref="member">GEAR_RATIO</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.start();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a35592c99e9e69dc06f8ff3283a8af3d8" kindref="member">DEBRIDER_STATE_RUNNING</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ae990b753b6a68893e8f3c8c64d4200e4" kindref="member">m_Motor</ref>.<ref refid="classMaxonMotor_1a1dc2e9c7a1309d947cecd4122ca1f235" kindref="member">EnableVelocityMode</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a658bd13dd63fc88bd8a5b37930c4c877" kindref="member">m_PrevState</ref><sp/>=<sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Right<sp/>Pedal<sp/>Pressed,<sp/>state<sp/>transition<sp/>from<sp/>ENABLED<sp/>to<sp/>CLOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>return<sp/>to<sp/>ENABLED<sp/>through<sp/>callback<sp/>upon<sp/>completion<sp/>of<sp/>closing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classMotorThread_1a658bd13dd63fc88bd8a5b37930c4c877" kindref="member">m_PrevState</ref><sp/>==<sp/><ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref><sp/>&amp;&amp;<sp/><ref refid="classMotorThread_1a04372fe2e0a1d4a2bae9b1a11fa56566" kindref="member">m_CloseBlade</ref>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;State<sp/>transition<sp/>from<sp/>enabled<sp/>to<sp/>close\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a5a172da4f057f751a998f18c08274ed2" kindref="member">DEBRIDER_STATE_CLOSE_BLADE</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a04372fe2e0a1d4a2bae9b1a11fa56566" kindref="member">m_CloseBlade</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.<ref refid="classEposThread_1a78a50cc02087845e3f167563ee7aee11" kindref="member">SetTransition</ref>(<ref refid="m__defines_8h_1a7780e8c3e872d84d1262aa6907097802ac9066432ffb039b61078c925a452687e" kindref="member">kCloseBlade</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.start();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a658bd13dd63fc88bd8a5b37930c4c877" kindref="member">m_PrevState</ref><sp/>=<sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>In<sp/>Running<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>==<sp/><ref refid="m__defines_8h_1a35592c99e9e69dc06f8ff3283a8af3d8" kindref="member">DEBRIDER_STATE_RUNNING</ref>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Change<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a129ffc33fb4fabf3be7692cbbea73de8" kindref="member">m_DebriderInstantSpeed</ref>=int(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(<ref refid="classMotorThread_1ae990b753b6a68893e8f3c8c64d4200e4" kindref="member">m_Motor</ref>.<ref refid="classMaxonMotor_1a3c08c4be5ecba4752a2ff9550c771573" kindref="member">GetCurrentVelocity</ref>())/</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(<ref refid="m__defines_8h_1a1b5f0a2cda8866a2a87331026ac8bd9a" kindref="member">GEAR_RATIO</ref>));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a2e648304774e31b30bd4536b8f75eb15" kindref="member">CalculateDesiredVelocity</ref>(<ref refid="classMotorThread_1ae88e7c675f696a7fd04fc4cb3af65896" kindref="member">m_DebriderDesiredSpeed</ref>,<ref refid="classMotorThread_1a27f740f4057d1b9a2128c0e77afb6203" kindref="member">m_LeftPedalDepth</ref>,<ref refid="classMotorThread_1a35395e16697ec0c879be2ab3abb0324c" kindref="member">m_DebriderTargetSpeed</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Target<sp/>velocity<sp/>is<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>m_DebriderTargetSpeed<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;New<sp/>Target<sp/>Velocity<sp/>is<sp/>:<sp/>&quot;&lt;&lt;<sp/>m_DebriderInstantSpeed<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Analog<sp/>Value<sp/>is<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>m_FootPedal.GetLeftPedalValue()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Analog<sp/>pedal<sp/>value<sp/>varies<sp/>from<sp/>0-1023,<sp/>we<sp/>discard<sp/>23<sp/>and<sp/>map<sp/>analog<sp/>value<sp/>to<sp/>from<sp/>0-1000.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>received<sp/>analog<sp/>value<sp/>from<sp/>pedal<sp/>we<sp/>adjust<sp/>speed.<sp/>200<sp/>is<sp/>when<sp/>we<sp/>take<sp/>gear<sp/>ratio<sp/>in<sp/>to<sp/>account.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ae990b753b6a68893e8f3c8c64d4200e4" kindref="member">m_Motor</ref>.<ref refid="classMaxonMotor_1a69c9584463dfc3c6db5f43a68dfd8e12" kindref="member">MoveVelocity</ref>(<ref refid="classMotorThread_1ae88e7c675f696a7fd04fc4cb3af65896" kindref="member">m_DebriderDesiredSpeed</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Left<sp/>Pedal<sp/>released</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>###FROM<sp/>RUNNING<sp/>OR<sp/>OSC<sp/>MODE<sp/>TO<sp/>ENABLED<sp/>TRANSITION###</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a658bd13dd63fc88bd8a5b37930c4c877" kindref="member">m_PrevState</ref><sp/>&gt;<sp/><ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref><sp/>&amp;&amp;<sp/><ref refid="classMotorThread_1adaee421e7f5ab68724f49fb4ba8a833f" kindref="member">m_LeftPedalDown</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a658bd13dd63fc88bd8a5b37930c4c877" kindref="member">m_PrevState</ref><sp/>==<sp/><ref refid="m__defines_8h_1a35592c99e9e69dc06f8ff3283a8af3d8" kindref="member">DEBRIDER_STATE_RUNNING</ref><sp/>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a129ffc33fb4fabf3be7692cbbea73de8" kindref="member">m_DebriderInstantSpeed</ref>=0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ae990b753b6a68893e8f3c8c64d4200e4" kindref="member">m_Motor</ref>.<ref refid="classMaxonMotor_1a69c9584463dfc3c6db5f43a68dfd8e12" kindref="member">MoveVelocity</ref>(0);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Returning<sp/>to<sp/>Enabled<sp/>from<sp/>running\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a658bd13dd63fc88bd8a5b37930c4c877" kindref="member">m_PrevState</ref><sp/>==<sp/><ref refid="m__defines_8h_1a910492cfd9d0edd5cb11482c6b723657" kindref="member">DEBRIDER_STATE_OSC</ref>)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.<ref refid="classEposThread_1a64675fb679d8e9cfc96b1ddc8a49d959" kindref="member">Abort</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a64b2215bd559b5e4efd5d468346a1371" kindref="member">m_EposThread</ref>.<ref refid="classEposThread_1a64b9e267d07407cc66c7acdc40cbafab" kindref="member">GetWaitingForMotionInfo</ref>())<sp/>continue<sp/>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Returning<sp/>to<sp/>Enabled<sp/>from<sp/>oscillation\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Blade<sp/>closed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a658bd13dd63fc88bd8a5b37930c4c877" kindref="member">m_PrevState</ref><sp/>==<sp/><ref refid="m__defines_8h_1a0274b6c2975d33f8c774371e2b9e5a08" kindref="member">DEBRIDER_STATE_BLADE_CLOSED</ref>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Returning<sp/>to<sp/>Enabled<sp/>from<sp/>closed\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a658bd13dd63fc88bd8a5b37930c4c877" kindref="member">m_PrevState</ref><sp/>=<sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">PulseWatchDog</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Initialization<sp/>thread<sp/>completed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMotorThread_1a2d8e704b48add85c86022e103d1468a0" kindref="member">MotorThread::on_InitComplete</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(state<sp/>==<sp/><ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initialization<sp/>Complete\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_currState<sp/>=<sp/>DEBRIDER_STATE_INIT;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state==<ref refid="m__defines_8h_1a45e01107d9b9d1fd2bea7364250dfe83" kindref="member">DEBRIDER_STATE_READY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Waiting<sp/>for<sp/>Initialization<sp/>Switch\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a45e01107d9b9d1fd2bea7364250dfe83" kindref="member">DEBRIDER_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state==<ref refid="m__defines_8h_1a495593a95f3e1b8c7f961ad81752b206" kindref="member">DEBRIDER_STATE_EPOS_ERROR</ref>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initialization<sp/>error<sp/>state<sp/>EPOS_ERROR\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a495593a95f3e1b8c7f961ad81752b206" kindref="member">DEBRIDER_STATE_EPOS_ERROR</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state==<ref refid="m__defines_8h_1a8f20f6ee38a5bc7f5f041ba44c227ee5" kindref="member">DEBRIDER_STATE_EMERGENCY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initialization<sp/>error<sp/>state<sp/>EMERGENCY\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a8f20f6ee38a5bc7f5f041ba44c227ee5" kindref="member">DEBRIDER_STATE_EMERGENCY</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state==<ref refid="m__defines_8h_1ab118c9f84eb40748c0d85fc774f9128a" kindref="member">DEBRIDER_STATE_SPI_ERROR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initialization<sp/>error<sp/>state<sp/>SPI_ERROR\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1ab118c9f84eb40748c0d85fc774f9128a" kindref="member">DEBRIDER_STATE_SPI_ERROR</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state==<ref refid="m__defines_8h_1a75d10b463a17a52541469e3c1a083374" kindref="member">DEBRIDER_STATE_INITIALIZING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initialization<sp/>error<sp/>state<sp/>INITIALIZING\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a75d10b463a17a52541469e3c1a083374" kindref="member">DEBRIDER_STATE_INITIALIZING</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMotorThread_1ad81a92fafe0cd3fbfc3944625b0d9d4c" kindref="member">MotorThread::on_TransToOscComplete</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errcode)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errcode<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Oscillation<sp/>mode<sp/>ended\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_currState<sp/>=<sp/>DEBRIDER_STATE_INIT;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>start<sp/>oscillation<sp/>mode\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a8f20f6ee38a5bc7f5f041ba44c227ee5" kindref="member">DEBRIDER_STATE_EMERGENCY</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMotorThread_1a4937257506cb3cfc9dbf2184bd0d8a52" kindref="member">MotorThread::on_BladeClosed</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errcode)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errcode<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Blade<sp/>closed\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a0274b6c2975d33f8c774371e2b9e5a08" kindref="member">DEBRIDER_STATE_BLADE_CLOSED</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Blade<sp/>closing<sp/>error\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a8f20f6ee38a5bc7f5f041ba44c227ee5" kindref="member">DEBRIDER_STATE_EMERGENCY</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMotorThread_1a0276cc0d95bf28435c9416edb31c4c60" kindref="member">MotorThread::on_FootPedalLButton</ref>()</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Left<sp/>Button<sp/>changes<sp/>RPM<sp/>to<sp/>MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a1ef32265639a9b03d65085982bd9c929" kindref="member">m_LeftButtonClicked</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Left<sp/>Click\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMotorThread_1a429dbd70a7ee33e426e99ee8c4e11332" kindref="member">MotorThread::on_FootPedalRButton</ref>()</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Right<sp/>button<sp/>changes<sp/>spin<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a241f03bca98232f09d1395795cd6c10c" kindref="member">m_RightButtonClicked</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Right<sp/>Click\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMotorThread_1a624b6187e6bc8a5e6a40d2dbd097f566" kindref="member">MotorThread::on_RightFootPedal</ref>()</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Right<sp/>Pedal<sp/>Click\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Right<sp/>Foot<sp/>Pedal<sp/>has<sp/>effect<sp/>of<sp/>pressing<sp/>&quot;Close&quot;<sp/>button<sp/>in<sp/>GUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ae427c8e8df2112cf83af0b2bac00dbe4" kindref="member">m_RightPedalClicked</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMotorThread_1aa332fd0ec1abfbd0840a0410d4536be3" kindref="member">MotorThread::ReInitialize</ref>()</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Reinitializing\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref><sp/>=<sp/><ref refid="m__defines_8h_1a5a2bfe44c18d0f115b3daeb1566c5a2b" kindref="member">DEBRIDER_STATE_UNINIT</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a640de212448250a3fc0da6c6751cc09c" kindref="member">m_FootPedal</ref>.requestInterruption();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(m_FootPedal.isRunning()){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_FootPedal.SetSPIError(false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a65e302d8a9a11ce4eca6bd0782a2cee9" kindref="member">m_GuiEmergencyMode</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMotorThread_1a2ba498e321e90ec8ee2be7436d9585dd" kindref="member">MotorThread::on_SPIStateChanged</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>=state;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>emit(<ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>));</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMotorThread_1a5569480ac5dd2a05c28a8b0008671d47" kindref="member">MotorThread::ProcessPedalButtons</ref>()</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a1ef32265639a9b03d65085982bd9c929" kindref="member">m_LeftButtonClicked</ref><sp/>||<sp/><ref refid="classMotorThread_1a241f03bca98232f09d1395795cd6c10c" kindref="member">m_RightButtonClicked</ref><sp/>||<sp/><ref refid="classMotorThread_1ae427c8e8df2112cf83af0b2bac00dbe4" kindref="member">m_RightPedalClicked</ref><sp/>||<sp/><ref refid="classMotorThread_1a0b8c30c3107cfc30f1ee21cc7c8bcf39" kindref="member">m_LeftPedalClicked</ref>){</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a1ef32265639a9b03d65085982bd9c929" kindref="member">m_LeftButtonClicked</ref>){</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a1ef32265639a9b03d65085982bd9c929" kindref="member">m_LeftButtonClicked</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>!=<ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref>){</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1af0488f54dbd47d15c365ff746a2dffbb" kindref="member">m_GuiChangePresetRPM</ref>=0;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1af0488f54dbd47d15c365ff746a2dffbb" kindref="member">m_GuiChangePresetRPM</ref>=1;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a241f03bca98232f09d1395795cd6c10c" kindref="member">m_RightButtonClicked</ref>)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a241f03bca98232f09d1395795cd6c10c" kindref="member">m_RightButtonClicked</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>!=<ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref>){</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1af449179ef93260cd7d5af0db967fe849" kindref="member">m_GuiBtnChangeDirection</ref>=0;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1af449179ef93260cd7d5af0db967fe849" kindref="member">m_GuiBtnChangeDirection</ref>=1;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a0b8c30c3107cfc30f1ee21cc7c8bcf39" kindref="member">m_LeftPedalClicked</ref>)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a0b8c30c3107cfc30f1ee21cc7c8bcf39" kindref="member">m_LeftPedalClicked</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>!=<ref refid="m__defines_8h_1a85996c0db78e7ce21b0319241f4484ab" kindref="member">DEBRIDER_STATE_ENABLED</ref>){</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ad7c2d915038fd14ac3bd2a570b58a0d6" kindref="member">m_GuiBtnCloseBlade</ref>=0;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ad7c2d915038fd14ac3bd2a570b58a0d6" kindref="member">m_GuiBtnCloseBlade</ref>=1;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMotorThread_1af18be8fa0afa1ad46f71f41415a0e8f0" kindref="member">UpdateGUI</ref>(<ref refid="classMotorThread_1a9f626a88ac12fbb0505ac4937b211a3c" kindref="member">m_CurrState</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMotorThread_1a4dfe595caa3eaf3bf92e07fb1312c2f3" kindref="member">MotorThread::PulseWatchDog</ref>()</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Pulse<sp/>watchdog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1ade960b57d24a29082a2a675a85fbd5c0" kindref="member">m_WatchdogTimer</ref>.nsecsElapsed()&gt;=2500000)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMotorThread_1a4ed783ee0947a482269276518b202fcc" kindref="member">m_WatchdogState</ref>)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="m__defines_8h_1a7dddd4b69fa098648a2a66810d87b606" kindref="member">WATCHDOG_PIN</ref>,LOW);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ade960b57d24a29082a2a675a85fbd5c0" kindref="member">m_WatchdogTimer</ref>.restart();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4ed783ee0947a482269276518b202fcc" kindref="member">m_WatchdogState</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="m__defines_8h_1a7dddd4b69fa098648a2a66810d87b606" kindref="member">WATCHDOG_PIN</ref>,HIGH);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1ade960b57d24a29082a2a675a85fbd5c0" kindref="member">m_WatchdogTimer</ref>.restart();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a4ed783ee0947a482269276518b202fcc" kindref="member">m_WatchdogState</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>if<sp/>watchDogTimer.nsecsElapsed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMotorThread_1a2e648304774e31b30bd4536b8f75eb15" kindref="member">MotorThread::CalculateDesiredVelocity</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>desired_vel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pedal_depth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target_vel)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pedal_val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>pedal_val<sp/>=<sp/>(pedal_depth-<ref refid="m__defines_8h_1a8c92b681b7da32f7369a401fb0f83f52" kindref="member">ADC_MIN_PEDAL_OUTPUT</ref>)*(<ref refid="m__defines_8h_1ae3c6be9bad04d182b54c1ae72d83e48a" kindref="member">ADC_MIN_OUTPUT</ref>-<ref refid="m__defines_8h_1aeb553970bb72febda4d8c526be85948a" kindref="member">ADC_MAX_OUTPUT</ref>)/(<ref refid="m__defines_8h_1aeb553970bb72febda4d8c526be85948a" kindref="member">ADC_MAX_OUTPUT</ref>-<ref refid="m__defines_8h_1a8c92b681b7da32f7369a401fb0f83f52" kindref="member">ADC_MIN_PEDAL_OUTPUT</ref>)+<ref refid="m__defines_8h_1aeb553970bb72febda4d8c526be85948a" kindref="member">ADC_MAX_OUTPUT</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>desired_vel<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(target_vel)/</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="m__defines_8h_1aeb553970bb72febda4d8c526be85948a" kindref="member">ADC_MAX_OUTPUT</ref>))*pedal_val*<ref refid="m__defines_8h_1a1b5f0a2cda8866a2a87331026ac8bd9a" kindref="member">GEAR_RATIO</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMotorThread_1ada54247cc11e73cd36aac5a2d067766a" kindref="member">MotorThread::on_LeftFootPedal</ref>()</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Right<sp/>Pedal<sp/>Click\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CKim<sp/>-<sp/>Right<sp/>Foot<sp/>Pedal<sp/>has<sp/>effect<sp/>of<sp/>pressing<sp/>&quot;Close&quot;<sp/>button<sp/>in<sp/>GUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMotorThread_1a0b8c30c3107cfc30f1ee21cc7c8bcf39" kindref="member">m_LeftPedalClicked</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/motorthread.cpp"/>
  </compounddef>
</doxygen>
