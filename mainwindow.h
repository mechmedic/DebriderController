/*****************************************************************************
 * \file  mainwindow.h
 * \brief Header file includes class generated by QT and implements GUI
 * interactions.
 *
 * Last Updated : 2021.10.18 Chunwoo Kim (CKim) & Veysi ADIN (VysAdn)
 * Contact Info : cwkim@kist.re.kr & veysi.adin@kist.re.kr
 *******************************************************************************/

#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QElapsedTimer>
#include <qstring.h>

// CKim - Headers
#include "epos4_can.h"
#include "motorthread.h"
#include "m_defines.h"
#include "emergency_window.h"
#include "eposthread.h"
#include <wiringPi.h>

namespace Ui {
class MainWindow;
}

class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    explicit MainWindow(QWidget *parent = nullptr);
    ~MainWindow();

private slots:
    // CKim - GUI callbacks (button click, toggle, etc.)
    void on_btnDecreaseRPM_clicked();

    void on_btnIncreaseRPM_clicked();

    void on_radioCW_toggled(bool checked);

    void on_radioCCW_toggled(bool checked);

    void on_radioOSC_toggled(bool checked);

    void on_btnDecreaseFlow_clicked();

    void on_btnIncreaseFlow_clicked();

    void on_btnIrrigationMove_clicked();

    void on_btnIrrigationStop_clicked();
    
    void on_btnCloseBlade_clicked();

    void on_radioMAXRPM_clicked();

    // CKim - Slot handling UpdateGUI() signal
    void on_StateChanged(int state);

    // CKim - Opens Emergency Dialog
    void on_CallEmergencyWindow();

    // CKim - Called on exit of emrgency dialog
    void on_ExitEmergencyClicked(int a);

private:
      void PrintStatus(int dSpeed, int pSpeed);

      // CKim - Pump motor on/off
      void StopPumpMotor();
      void MovePumpMotor();

      // CKim - Enable / Disable GUI
      void EnableGUI();
      void DisableGUI();

      // CKim - Processes foot pedal inputs
      void ShowPedalButtonStates();

      // VysAdn Valve On/Off
      void EnableValve();
      void DisableValve();

      void InitializeIO();
private:
      Ui::MainWindow *ui;

      // CKim - QString for messages that will be displayed
      QString speed_label;
      QString status_label;

      // CKim - Variables updated from GUI input
      float pump_motor_target_speed=0.0;
      int pump_motor_printed_speed_val=0;
      bool pump_running_status=false;
      int debrider_motor_target_speed;

      Emergency_Window emergencyWindow;
      motorThread m_Thread;

};

#endif // MAINWINDOW_H
